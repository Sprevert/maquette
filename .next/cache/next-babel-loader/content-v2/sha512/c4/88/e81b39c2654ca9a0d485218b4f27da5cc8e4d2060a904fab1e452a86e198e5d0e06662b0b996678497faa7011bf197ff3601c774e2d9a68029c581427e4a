{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Code\\\\React\\\\plumeo\\\\components\\\\Sidebar\\\\Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { Navbar, Nav, Media, Container } from 'react-bootstrap';\nimport { useRouter } from \"next/router\"; // nodejs library to set properties for components\n\nimport { PropTypes } from \"prop-types\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, CardTitle, Collapse, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, NavbarBrand, NavItem, NavLink } from \"reactstrap\";\nvar ps;\n\nfunction Sidebar(props) {\n  // used for checking current route\n  const router = useRouter();\n  const [collapseOpen, setCollapseOpen] = React.useState(false); // verifies if routeName is the one active (in browser input)\n\n  const activeRoute = routeName => {\n    return router.route.indexOf(routeName) > -1;\n  }; // toggles collapse between opened and closed (true/false)\n\n\n  const toggleCollapse = () => {\n    setCollapseOpen(!collapseOpen);\n  }; // closes the collapse\n\n\n  const closeCollapse = () => {\n    setCollapseOpen(false);\n  }; // creates the links that appear in the left menu / Sidebar\n\n\n  const createLinks = routes => {\n    return routes.map((prop, key) => {\n      return /*#__PURE__*/_jsxDEV(NavItem, {\n        active: activeRoute(prop.layout + prop.path),\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: prop.layout + prop.path,\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            href: \"\",\n            active: activeRoute(prop.layout + prop.path),\n            onClick: closeCollapse,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: prop.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 8\n            }, this), prop.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  const {\n    routes,\n    logo\n  } = props;\n\n  let navbarBrand = /*#__PURE__*/_jsxDEV(NavbarBrand, {\n    href: \"/admin/home\",\n    className: \"pt-0\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: logo.imgAlt,\n      className: \"navbar-brand-img\",\n      src: logo.imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    collapseOnSelect: true,\n    expand: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"/img/logo/Logo-plumeo.svg\",\n            alt: \"Plum\\xE9o\",\n            height: 50,\n            width: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"responsive-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"responsive-navbar-nav\",\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"titres\",\n            children: \"Mes titres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"documents\",\n            children: \"Mes documents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"cessions\",\n            children: \"Mes cessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"compte\",\n            children: \"Mon compte\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Nav, {\n          children: /*#__PURE__*/_jsxDEV(Media, {\n            className: \"align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Media, {\n              className: \"mr-2\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Jean Christophe Rufin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"Jean Christophe Rufin\",\n                src: \"img/auteur/Rufin-195x195.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n\nSidebar.defaultProps = {\n  routes: [{}]\n};\nSidebar.propTypes = {\n  // links that will be displayed inside the component\n  routes: PropTypes.arrayOf(PropTypes.object),\n  logo: PropTypes.shape({\n    // innerLink is for links that will direct the user within the app\n    // it will be rendered as <Link href=\"...\">...</Link> tag\n    innerLink: PropTypes.string,\n    // outterLink is for links that will direct the user outside the app\n    // it will be rendered as simple <a href=\"...\">...</a> tag\n    outterLink: PropTypes.string,\n    // the image src of the logo\n    imgSrc: PropTypes.string.isRequired,\n    // the alt for the img\n    imgAlt: PropTypes.string.isRequired\n  })\n};\nexport default Sidebar;","map":{"version":3,"sources":["C:/Code/React/plumeo/components/Sidebar/Sidebar.js"],"names":["React","Link","Image","Navbar","Nav","Media","Container","useRouter","PropTypes","Button","Card","CardHeader","CardBody","CardTitle","Collapse","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","FormGroup","Form","Input","InputGroupAddon","InputGroupText","InputGroup","NavbarBrand","NavItem","NavLink","ps","Sidebar","props","router","collapseOpen","setCollapseOpen","useState","activeRoute","routeName","route","indexOf","toggleCollapse","closeCollapse","createLinks","routes","map","prop","key","layout","path","icon","name","logo","navbarBrand","imgAlt","imgSrc","defaultProps","propTypes","arrayOf","object","shape","innerLink","string","outterLink","isRequired"],"mappings":"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","sourcesContent":["/*eslint-disable*/\r\nimport React from \"react\";\r\nimport Link from 'next/link'\r\nimport Image from 'next/image'\r\nimport { Navbar, Nav, Media, Container } from 'react-bootstrap'\r\nimport { useRouter } from \"next/router\";\r\n// nodejs library to set properties for components\r\nimport { PropTypes } from \"prop-types\";\r\n\r\n// reactstrap components\r\nimport {\r\n\tButton,\r\n\tCard,\r\n\tCardHeader,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tCollapse,\r\n\tDropdownMenu,\r\n\tDropdownItem,\r\n\tUncontrolledDropdown,\r\n\tDropdownToggle,\r\n\tFormGroup,\r\n\tForm,\r\n\tInput,\r\n\tInputGroupAddon,\r\n\tInputGroupText,\r\n\tInputGroup,\r\n\tNavbarBrand,\r\n\tNavItem,\r\n\tNavLink,\r\n} from \"reactstrap\";\r\n\r\nvar ps;\r\n\r\nfunction Sidebar(props) {\r\n\t// used for checking current route\r\n\tconst router = useRouter();\r\n\tconst [collapseOpen, setCollapseOpen] = React.useState(false);\r\n\t// verifies if routeName is the one active (in browser input)\r\n\tconst activeRoute = (routeName) => {\r\n\t\treturn router.route.indexOf(routeName) > -1;\r\n\t};\r\n\t// toggles collapse between opened and closed (true/false)\r\n\tconst toggleCollapse = () => {\r\n\t\tsetCollapseOpen(!collapseOpen);\r\n\t};\r\n\t// closes the collapse\r\n\tconst closeCollapse = () => {\r\n\t\tsetCollapseOpen(false);\r\n\t};\r\n\t// creates the links that appear in the left menu / Sidebar\r\n\tconst createLinks = (routes) => {\r\n\t\treturn routes.map((prop, key) => {\r\n\t\t\treturn (\r\n\t\t\t\t<NavItem key={key} active={activeRoute(prop.layout + prop.path)}>\r\n\t\t\t\t\t<Link href={prop.layout + prop.path}>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\thref=\"\"\r\n\t\t\t\t\t\t\tactive={activeRoute(prop.layout + prop.path)}\r\n\t\t\t\t\t\t\tonClick={closeCollapse}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className={prop.icon} />\r\n\t\t\t\t\t\t\t{prop.name}\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</NavItem>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\tconst { routes, logo } = props;\r\n\tlet navbarBrand = (\r\n\t\t<NavbarBrand href=\"/admin/home\" className=\"pt-0\">\r\n\t\t\t<img alt={logo.imgAlt} className=\"navbar-brand-img\" src={logo.imgSrc} />\r\n\t\t</NavbarBrand>\r\n\t);\r\n\treturn (\r\n\t\t<Navbar collapseOnSelect expand=\"xl\">\r\n\t\t\t<Container fluid=\"xl\">\r\n\t\t\t\t<Navbar.Brand href=\"#home\">\r\n\t\t\t\t\t<Link href=\"/\">\r\n\t\t\t\t\t\t<Image src=\"/img/logo/Logo-plumeo.svg\" alt=\"Pluméo\" height={50} width={100} />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"titres\">Mes titres</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"documents\">Mes documents</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"cessions\">Mes cessions</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"compte\">Mon compte</Nav.Link>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t\t<Nav>\r\n\t\t\t\t\t\t<Media className=\"align-items-center\">\r\n\t\t\t\t\t\t\t<Media className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t<span>Jean Christophe Rufin</span>\r\n\t\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t\t\t<span className=\"avatar\">\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\talt=\"Jean Christophe Rufin\"\r\n\t\t\t\t\t\t\t\t\tsrc=\"img/auteur/Rufin-195x195.jpg\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t</Media>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n\r\nSidebar.defaultProps = {\r\n\troutes: [{}],\r\n};\r\n\r\nSidebar.propTypes = {\r\n\t// links that will be displayed inside the component\r\n\troutes: PropTypes.arrayOf(PropTypes.object),\r\n\tlogo: PropTypes.shape({\r\n\t\t// innerLink is for links that will direct the user within the app\r\n\t\t// it will be rendered as <Link href=\"...\">...</Link> tag\r\n\t\tinnerLink: PropTypes.string,\r\n\t\t// outterLink is for links that will direct the user outside the app\r\n\t\t// it will be rendered as simple <a href=\"...\">...</a> tag\r\n\t\toutterLink: PropTypes.string,\r\n\t\t// the image src of the logo\r\n\t\timgSrc: PropTypes.string.isRequired,\r\n\t\t// the alt for the img\r\n\t\timgAlt: PropTypes.string.isRequired,\r\n\t}),\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}